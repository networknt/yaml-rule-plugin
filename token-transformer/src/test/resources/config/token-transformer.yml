proxyHost: ""
proxyPort: ""
enableHttp2: false
tokenSchemas:
  aliasConfigTest:
    sharedVariables:
      accessToken: abc-123
      expiration: 9999999999999
      tokenTtlUnit: sec
    request:
      url: "https://fake.token.com/services/oauth2/token"
      type: application/json
      headers:
        Content-Type: application/json
      body:
        test: test
    source:
      expirationSchema:
        location: Header
        field: test_header
        ttlUnit: Minute
      body:
        - source: access_token
          destination: "!ref(sharedVariables.accessToken)"
    update:
      direction: request
      headers:
        Authorization: "Bearer !ref(sharedVariables.accessToken)"
  multiThreadTest:
    sharedVariables:
      accessToken: abc-123
      expiration: 9999999999999
    request:
      url: "https://fake.token.com/services/oauth2/token"
      type: application/json
      headers:
        Content-Type: application/json
      body:
        test: test
    source:
      body:
        - source: access_token
          destination: "!ref(sharedVariables.accessToken)"
    update:
      direction: REQUEST
      headers:
        Authorization: "Bearer !ref(sharedVariables.accessToken)"

  gracePeriodTest:
    sharedVariables:
      accessToken: abc-123
      expiration: 2724957439
      waitLength: 2147483647
    request:
      url: "https://fake.token.com/services/oauth2/token"
      type: application/json
      headers:
        Content-Type: application/json
      body:
        test: test
    source:
      body:
        - source: access_token
          destination: "!ref(sharedVariables.accessToken)"
    update:
      direction: REQUEST
      headers:
        Authorization: "Bearer !ref(sharedVariables.accessToken)"

  expirationTest:
    sharedVariables:
      accessToken: abc-123
      expiration: 9999999999999
    request:
      url: "https://test.token.com/services/oauth2/token"
      type: application/json
      headers:
        Content-Type: application/json
      body:
        test: test
    source:
      body:
        - source: access_token
          destination: "!ref(sharedVariables.accessToken)"
    update:
      direction: REQUEST
      headers:
        Authorization: "Bearer !ref(sharedVariables.accessToken)"

  mrasMicrosoft:
    sharedVariables:
      clientId: "my-microsoft-client-id"
      clientSecret: "my-microsoft-client-secret"
    request:
      cacheHttpClient: true
      url: "https://test.mras.com/services/oauth2/token"
      type: application/x-www-form-urlencoded
      headers:
        Content-Type: application/x-www-form-urlencoded
      body:
        grant_type: "client_credentials"
        resource: "9bcadce-3312-4c2b-9a5d-0e90e8b92c67"
        client_id: "!ref(sharedVariables.clientId)"
        client_secret: "!ref(sharedVariables.clientSecret)"

    source:
      body:
        - source: access_token
          destination: "!ref(sharedVariables.accessToken)"
        - source: expires_in
          destination: "!ref(sharedVariables.tokenTtl)"

    update:
      direction: REQUEST
      headers:
        Authorization: "Bearer !ref(sharedVariables.accessToken)"
  lifeware:
    sharedVariables:
      clientId: "my-id"
      clientSecret: "abc-123"
    request:
      cacheHttpClient: true
      url: "https://networknttest.asp.lifeware.lu/api/v0/token"
      type: application/json
      headers:
        Content-Type: application/json
        Accept: application/json
      body:
        client_id: "!ref(sharedVariables.clientId)"
        client_secret: "!ref(sharedVariables.clientSecret)"
    source:
      body:
        - source: access_key
          destination: "!ref(sharedVariables.accessToken)"
    update:
      direction: REQUEST
      headers:
        Authorization: "Bearer !ref(sharedVariables.accessToken)"
  salesforce:
    sharedVariables:
      grantType: urn:ietf:params:oauth:grant-type:jwt-bearer
      tokenTtl: 60
    request:
      cacheHttpClient: false
      url: https://test.salesforce.com/services/oauth2/token
      jwtSchema:
        jwtTtl: 300
        keyStore:
          name: apigatewayuat.pfx
          password: password01
          alias: apigatewayuat
          keyPass: password01
        algorithm: SHA256withRSA
        jwtHeader:
          staticFields:
            alg: RS256
        jwtBody:
          staticFields:
            iss: 3MVG9S11UK8FGR3O.vJebzXvWgAE211Z9KX_7vmKt6k300-2913g_AdsTWtzBTLI232Y1w21kw2HANBfU9jTTJF9h5mL.2tJdY142hyaPW
            sub: apiuser.conquestintegration@networknt.sit
            aud: https://test.salesforce.com
          expiryFields:
            - exp
      headers:
        Content-Type: application/x-www-form-urlencoded
      body:
        grant_type: "!ref(sharedVariables.grantType)"

        # accessToken is populated by configured jwtSchema
        assertion: "!ref(sharedVariables.accessToken)"
  mrasSSL:
    sharedVariables:
      username: "my-basic-username"
      password: "my-basic-password"
      tokenTtl: 300
    request:
      cacheHttpClient: true
      cacheSSLContext: false
      url: "https://test.mras.com/services/oauth2/token"
      type: application/x-www-form-urlencoded
      sslContextSchema:
        tlsVersion: TLSv1.2
        trustStore:
          name: mras_ts.jks
          password: password
        keyStore:
          name: api.ais-dev
          password: password
          keyPass: password
      headers:
        Content-Type: application/x-www-form-urlencoded
        Authorization: "BASIC <encoded_credentials>"
      body:
        grant_type: client_credentials
    source:
      body:
        - source: access_token
          destination: "!ref(sharedVariables.accessToken)"
        - source: scope
          destination: "!ref(sharedVariables.scope)"
    update:
      direction: REQUEST
      headers:
        Authorization: "Bearer !ref(sharedVariables.accessToken)"
